import java.text.SimpleDateFormat

Date buildTimeAndDate = new Date()
ext {
  buildDate = new SimpleDateFormat('yyyy-MM-dd').format(buildTimeAndDate)
  buildTime = new SimpleDateFormat('HH:mm:ss.SSSZ').format(buildTimeAndDate)
}

if (!project.hasProperty('bintrayUsername')) ext.bintrayUsername = ''
if (!project.hasProperty('bintrayApiKey')) ext.bintrayApiKey = ''
if (!project.hasProperty('gpgPassphrase')) ext.gpgPassphrase = ''
if (!project.hasProperty('ossUser')) ext.ossUser = ''
if (!project.hasProperty('ossPassword')) ext.ossPassword = ''

bintray {
  user = project.bintrayUsername
  key = project.bintrayApiKey
  dryRun = false //Whether to run this as dry-run, without deploying
  publish = true //If version should be auto published after an upload
  publications = ['mavenJava']
  pkg {
    repo = 'maven-repo'
    userOrg = 'springfox' //An optional organization name when the repo belongs to one of the user's orgs
    name = 'springfox-swagger-ui'
    websiteUrl = 'https://github.com/springfox/springfox-swagger-ui-rfc6570'
    issueTrackerUrl = 'https://github.com/springfox/springfox-swagger-ui-rfc6570/issues'
    vcsUrl = 'https://github.com/springfox/springfox-swagger-ui-rfc6570/springfox-swagger-ui-rfc6570.git'
    desc = 'A swagger-ui mod that supports rfc6570 compliant urls'
    licenses = ['Apache-2.0']
    labels = ['spring', 'swagger', 'apis', 'swagger-ui']
    publicDownloadNumbers = true

    version {
      vcsTag = project.version
      gpg {
        sign = false //Determines whether to GPG sign the files. The default is false
        passphrase = project.gpgPassphrase //Optional. The passphrase for GPG signing'
      }
      mavenCentralSync {
        sync = false //Optional (true by default). Determines whether to sync the version to Maven Central.
        user = ossUser //OSS user token
        password = ossPassword //OSS user password
      }
    }
  }
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java
      pom.withXml {
        def devs = ['dilipkrish': 'Dilip Krishnan']
        def root = asNode()

        root.dependencies.'*'.findAll() {
          it.scope.text() == 'runtime' && project.configurations.compile.allDependencies.find { dep ->
            dep.name == it.artifactId.text()
          }
        }.each() {
          it.scope*.value = 'compile'
        }

        root.appendNode('name', 'springfox-swagger-ui-rfc6570')
        root.appendNode('packaging', 'jar')
        root.appendNode('url', 'https://github.com/springfox/springfox-swagger-ui-rfc6570')
        root.appendNode('description', 'A swagger-ui mod that supports rfc6570 compliant urls')

        def license = root.appendNode('licenses').appendNode('license')
        license.appendNode('name', 'Apache-2.0')
        license.appendNode('url', 'https://github.com/springfox/springfox-swagger-ui-rfc6570/blob/master/LICENSE.txt')
        license.appendNode('distribution', 'repo')

        root.appendNode('scm').appendNode('url', 'https://github.com/springfox/springfox-swagger-ui-rfc6570/springfox-swagger-ui-rfc6570.git')

        def developers = root.appendNode('developers')
        devs.each {
          def d = developers.appendNode('developer')
          d.appendNode('id', it.key)
          d.appendNode('name', it.value)
        }
      }
      artifact sourcesJar
      artifact javadocJar
    }
  }
}
